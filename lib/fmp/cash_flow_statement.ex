defmodule FMP.CashFlowStatement do
  defstruct [
    :date,
    :symbol,
    :reported_currency,
    :cik,
    :filling_date,
    :accepted_date,
    :calendar_year,
    :period,
    :net_income,
    :depreciation_and_amortization,
    :deferred_income_tax,
    :stock_based_compensation,
    :change_in_working_capital,
    :accounts_receivables,
    :inventory,
    :accounts_payables,
    :other_working_capital,
    :other_non_cash_items,
    :net_cash_provided_by_operating_activities,
    :investments_in_property_plant_and_equipment,
    :acquisitions_net,
    :purchases_of_investments,
    :sales_maturities_of_investments,
    :other_investing_activites,
    :net_cash_used_for_investing_activites,
    :debt_repayment,
    :common_stock_issued,
    :common_stock_repurchased,
    :dividends_paid,
    :other_financing_activites,
    :net_cash_used_provided_by_financing_activities,
    :effect_of_forex_changes_on_cash,
    :net_change_in_cash,
    :cash_at_end_of_period,
    :cash_at_beginning_of_period,
    :operating_cash_flow,
    :capital_expenditure,
    :free_cash_flow,
    :link,
    :final_link
  ]

  def from_json(list) do
    Enum.map(list, fn data ->
      %FMP.CashFlowStatement{
        date: Date.from_iso8601!(data["date"]),
        symbol: data["symbol"],
        reported_currency: data["reportedCurrency"],
        cik: data["cik"],
        filling_date: Date.from_iso8601!(data["fillingDate"]),
        accepted_date: data["acceptedDate"],
        calendar_year: data["calendarYear"],
        period: data["period"],
        net_income: data["netIncome"],
        depreciation_and_amortization: data["depreciationAndAmortization"],
        deferred_income_tax: data["deferredIncomeTax"],
        stock_based_compensation: data["stockBasedCompensation"],
        change_in_working_capital: data["changeInWorkingCapital"],
        accounts_receivables: data["accountsReceivables"],
        inventory: data["inventory"],
        accounts_payables: data["accountsPayables"],
        other_working_capital: data["otherWorkingCapital"],
        other_non_cash_items: data["otherNonCashItems"],
        net_cash_provided_by_operating_activities: data["netCashProvidedByOperatingActivities"],
        investments_in_property_plant_and_equipment: data["investmentsInPropertyPlantAndEquipment"],
        acquisitions_net: data["acquisitionsNet"],
        purchases_of_investments: data["purchasesOfInvestments"],
        sales_maturities_of_investments: data["salesMaturitiesOfInvestments"],
        other_investing_activites: data["otherInvestingActivites"],
        net_cash_used_for_investing_activites: data["netCashUsedForInvestingActivites"],
        debt_repayment: data["debtRepayment"],
        common_stock_issued: data["commonStockIssued"],
        common_stock_repurchased: data["commonStockRepurchased"],
        dividends_paid: data["dividendsPaid"],
        other_financing_activites: data["otherFinancingActivites"],
        net_cash_used_provided_by_financing_activities: data["netCashUsedProvidedByFinancingActivities"],
        effect_of_forex_changes_on_cash: data["effectOfForexChangesOnCash"],
        net_change_in_cash: data["netChangeInCash"],
        cash_at_end_of_period: data["cashAtEndOfPeriod"],
        cash_at_beginning_of_period: data["cashAtBeginningOfPeriod"],
        operating_cash_flow: data["operatingCashFlow"],
        capital_expenditure: data["capitalExpenditure"],
        free_cash_flow: data["freeCashFlow"],
        link: data["link"],
        final_link: data["finalLink"]
      }
    end)
  end
end
